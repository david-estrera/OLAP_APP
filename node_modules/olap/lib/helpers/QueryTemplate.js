class QueryTemplate {
    constructor() {

    }

    generateQuery(data) {

        const query = {
            "queryModel": {
                "axes": {
                    "ROWS": {
                        "location": "ROWS",
                        "hierarchies": [
                            {
                                "name": data.dimension.hierarchyUniqueName,
                                "levels": {}
                            }
                        ]
                    }
                },
                "details": {
                    "axis": "COLUMNS",
                    "location": "BOTTOM",
                    "measures": [
                        {
                            "name": data.measure.name,
                            "uniqueName":  data.measure.uniqueName,
                            "caption":  data.measure.caption,
                            "type": "EXACT"
                        }
                    ]
                }
            },
            "cube": data.cube,
            "mdx": `WITH\nSET [~ROWS] AS\n    {${data.measure.uniqueName}}\nSELECT\nNON EMPTY {${data.measure.uniqueName}} ON COLUMNS,\nNON EMPTY [~ROWS] ON ROWS\nFROM [${data.cube.name}]`
        }

        query.queryModel.axes.ROWS.hierarchies[0].levels[data.dimension.name] = {
            "name":  data.dimension.name
        }

        return query;
    }
}

const queryTemplate = new QueryTemplate();
module.exports = queryTemplate;
