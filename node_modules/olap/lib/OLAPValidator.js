const API = require('./services/API');
const MeasureParser = require('./services/MeasureParser');

class OLAPValidator {
    constructor(config) {
        this.config = config;
        this.api = new API(config);
        this.measureParser = new MeasureParser(config);
    }

    run() {
        let cubes = this.config.data;
        const filter = this.config.filter;

        if(filter) {
            cubes = cubes.filter((cube) => cube.cube === filter);
        }

        this.parseCubes(cubes);
    }

    parseCubes(cubes) {

        if(cubes.length > 0) {
            console.log(`[${cubes[0].schema}].[${cubes[0].cube}]`);

            this.api.getCube(cubes[0]).then((cube) => {

                Promise.all([
                    this.api.getMeasures(cube),
                    this.api.getDimensions(cube)
                ]).then((values) => {
                    this.measureParser.parser({
                        cube: cube,
                        measures: values[0],
                        dimensions: values[1]
                    }, () => {

                        cubes.splice(0, 1);
                        this.parseCubes(cubes);
                    });
                });
            });
        }
        else {
            return true;
        }
    }
}

module.exports = OLAPValidator;
